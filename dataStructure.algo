//calculating the sum of the repeated elements in 2 tables using array only
ALGORITHM repeatedElementsSum
VAR
    tab1 : ARRAY_OF integer[];
    tab2 : ARRAY_OF integer[];
    i:integer:=0;
    sum:integer:=0;
    j:integeer:=0;
BEGIN
    FOR i FROM 0 TO tab1.length-1 STEP 1  DO
        FOR j FROM 0 TO tab2.length-1 STEP 1  DO
            IF (tab1[i]=tab[j]) THEN
                sum:= sum+tab1[i]+tab[j];
            END_IF
        END_FOR
            
        END_IF
    END_FOR
END

//calculating the sum of the distinct elements using arrays only
ALGORITHM element_distinct
VAR
    tab1 : ARRAY_OF integer[];
    tab2 : ARRAY_OF integer[];
    i:integer:=0;
    sum:integer:=0;
    j:integer:=0;
    egaux:BOOLEAN:=true;
    sum:integer;
BEGIN
        FOR i FROM 0 TO tab1.length-1 STEP step 1 DO
            egaux:=false;
            FOR j FROM 0 TO tab2.length-1 STEP step 1 DO
                IF (tab[i]=tab[j]) THEN
                    egaux:=true;
                    break;
                END_IF
                
                
            END_FOR
            IF (egaux=false) THEN
                sum:=sum+tab[i];
            END_IF
            
        END_FOR  
        FOR i FROM 0 TO tab2.length-1 STEP step  DO
            egaux:=false;
            FOR j FROM 0 TO tab1.length-1 STEP step  DO
                IF (tab2[i]=tab1[j]) THEN
                    egaux:=true;
                    break;
                END_IF
            END_FOR
            IF (egaux=false) THEN
                sum:=sum+tab2[i];
            END_IF
        END_FOR  
        write(sum);
END



//autre methode




ALGORITHM element_distinct
VAR
    tab1 : ARRAY_OF integer[];
    tab2 : ARRAY_OF integer[];
    i:integer:=0;
    sum:integer:=0;
    j:integer:=0;
    tab1_egaux:BOOLEAN;
    tab2_egaux:BOOLEAN:;
    sum:integer;
BEGIN
    FOR i FROM 0 TO tab1.length-1 STEP step  DO
        tab1_egaux:=false;
        tab2_egaux:=false;
        FOR j FROM 0 TO tab1.length STEP step  DO
            IF (tab1[i]=tab2[j]) THEN
                tab1_egaux:=true
            END_IF
            IF (tab2[i]=tab1[j]) THEN
                tab2_egaux:=true;
            END_IF
        END_FOR
    IF (tab1_egaux=false and tab2_egaux=false) THEN
        sum:=sum+tab1[i]+tab2[i];
    ELSE
    IF (tab1_egaux=false and tab2_egaux=true) THEN
        sum:=sum+tab1[i];
    ELSE
    IF (tab1_egaux=true and tab2_egaux=false) THEN
        sum:=sum+tab2[i];
    END_IF
    END_FOR
    write(sum)
END

//calculating the sum of distinct elements using hash table 
ALGORITHM distinct
VAR
    tab1,tab2 : ARRAY_OF integer[];
    sum:integer;
    HASH_TABLE<integer,integer>
BEGIN
    
    FOR i FROM 0 TO tab1.length-1 STEP 1  DO
        h.insert(tab1[i],1)
    END_FOR
    FOR i FROM 0 TO tab2.length-1 STEP step  DO
        IF (h.lookup(tab2[i]=true)) THEN
            h.insert(tab2[i],2);
        ELSE
            h.insert(tab2[i],1);
        END_IF
    END_FOR
    FOR i FROM 0 TO tab1.length-1 STEP step  DO
        IF (h.get(tab1[i]=1)) THEN
            sum:=sum+tab1[i];
        END_IF
    END_FOR
    FOR i FROM 0 TO tab2.length-1 STEP step  DO
        IF (h.get(tab2[i]=1)) THEN
            sum:=sum+tab2[i];
        END_IF
    END_FOR
END
//calculating the sum of repeated elements using hash table
ALGORITHM repeat
VAR
    tab1,tab2 : ARRAY_OF integer[];
    sum:integer;
    HASH_TABLE<integer,integer>;
BEGIN
    FOR i FROM 0 TO tab1.length-1 STEP step  DO
        h.insert(tab1[i],1)
    END_FOR
    FOR i FROM 0 TO tab2.length-1 STEP step  DO
        IF (h.get(tab2[i]=1)) THEN
            h.insert(tab1[i],2);
        END_IF
    END_FOR
    FOR i FROM 0 TO tab1.length STEP step  DO
        if(h.get(tab1[i])=2) THEN
            sum:=sum+2*tab1[i];
    END_FOR
    write(sum);
END